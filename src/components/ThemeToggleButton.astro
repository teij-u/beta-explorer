---
// このコンポーネントはクライアントサイドで動作するため、サーバーサイドのロジックはありません
---
<button id="theme-toggle" type="button" class="text-gray-700 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5">
  <!-- 月アイコン（ダークモード用） -->
  <svg id="theme-toggle-dark-icon" class="hidden w-5 h-5" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
    <circle cx="12" cy="12" r="5" fill="currentColor"/>
    <g stroke="currentColor" stroke-width="2">
      <line x1="12" y1="1" x2="12" y2="3"/>
      <line x1="12" y1="21" x2="12" y2="23"/>
      <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"/>
      <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"/>
      <line x1="1" y1="12" x2="3" y2="12"/>
      <line x1="21" y1="12" x2="23" y2="12"/>
      <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"/>
      <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"/>
    </g>
  </svg>
  <!-- 太陽アイコン（ライトモード用） -->
  <svg id="theme-toggle-light-icon" class="w-5 h-5 hidden dark:inline" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
    <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
  </svg>
</button>

<script is:inline>
  const themeToggleBtn = document.getElementById('theme-toggle');
  const darkIcon = document.getElementById('theme-toggle-dark-icon');
  const lightIcon = document.getElementById('theme-toggle-light-icon');

  // Ensure all elements are found before proceeding
  if (themeToggleBtn && darkIcon && lightIcon) {
    // 1. ページ読み込み時に、ユーザーの過去の設定 or OSの設定に応じて表示を決定
    if (
      localStorage.getItem('color-theme') === 'dark' ||
      (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)
    ) {
      // ダークモードの場合
      lightIcon.classList.remove('hidden');
      darkIcon.classList.add('hidden'); // Ensure dark icon is hidden
      document.documentElement.classList.add('dark');
    } else {
      // ライトモードの場合
      darkIcon.classList.remove('hidden');
      lightIcon.classList.add('hidden'); // Ensure light icon is hidden
      document.documentElement.classList.remove('dark');
    }

    // 2. ボタンがクリックされた時の処理
    themeToggleBtn.addEventListener('click', () => {
      // 現在のテーマ設定を反転させる
      const isDark = document.documentElement.classList.toggle('dark');

      // アイコンを切り替え
      darkIcon.classList.toggle('hidden', isDark);
      lightIcon.classList.toggle('hidden', !isDark);

      // ユーザーの選択をlocalStorageに保存
      if (isDark) {
        localStorage.setItem('color-theme', 'dark');
      } else {
        localStorage.setItem('color-theme', 'light');
      }
    });
  }
</script>